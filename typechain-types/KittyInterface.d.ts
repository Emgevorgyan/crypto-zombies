/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface KittyInterfaceContract
  extends Truffle.Contract<KittyInterfaceInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<KittyInterfaceInstance>;
}

type AllEvents = never;

export interface KittyInterfaceInstance extends Truffle.ContractInstance {
  getKitty(
    _id: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{
    0: boolean;
    1: boolean;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
    6: BN;
    7: BN;
    8: BN;
    9: BN;
  }>;

  methods: {
    getKitty(
      _id: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{
      0: boolean;
      1: boolean;
      2: BN;
      3: BN;
      4: BN;
      5: BN;
      6: BN;
      7: BN;
      8: BN;
      9: BN;
    }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
